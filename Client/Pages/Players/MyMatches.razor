@page "/mp/{Id:int}"
@using kTVCSSBlazor.Client.Components
@using kTVCSSBlazor.Db.Models.Matches
@inject HttpClient http
@implements IDisposable

<PageTitle>kTVCSS @@ Мои матчи</PageTitle>

@if (ready)
{
    <RadzenDataGrid AllowVirtualization RowRender="RowRender" ShowColumnTitleAsTooltip ShowHeader="false" Data="@matches" TItem="TotalMatch" RowCssClass="match-row" Style="@(string.Concat("width: 100%; border: none;", $"height: {dataGridHeight}svh"))">
        <Columns>
            <RadzenDataGridColumn TItem="TotalMatch" Visible="true">
                <Template Context="match">
                    <a href="@(string.Concat("/match/", match.Id))">
                        <div style="display: flex; flex-direction: column;height: 100%;align-items: center;justify-content: space-evenly;">
                            @if (match.MatchDate == "LIVE")
                            {
                                <div class="rz-text-display-h5" style="color: red;font-weight: 600;width:100%;text-align:center">@match.MatchDate</div>
                            }
                            else
                            {
                                <div class="rz-text-display-h5" style="font-weight: 600;width:100%;text-align:center">@match.MatchDate</div>
                            }
                            <div style="display: flex;flex-direction:row;width: 100%;align-items: center;justify-content: space-between;">
                                <div class="rz-text-display-h5" style="font-weight: 600;text-align: center;width: 45%;">@match.ATeam</div>
                                <div class="rz-text-display-h5" style="font-weight: 600;display:flex;text-align:center;">@match.Score</div>
                                <div class="rz-text-display-h5" style="font-weight: 600;text-align: center;width: 45%;">@match.BTeam</div>
                            </div>
                            <div style="font-weight: 600;" class="rz-text-display-h5">@match.MapName</div>
                        </div>
                    </a>
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
}
else
{
    <RadzenRow JustifyContent="JustifyContent.Center">
        <RadzenStack AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <Loader Size="ProgressBarCircularSize.Medium" Text="Идет загрузка Ваших матчей" />
        </RadzenStack>
    </RadzenRow>
}

<style>
    .row-ktv {
        background-color: rgb(0 0 0 / 50%);
    }

        .row-ktv:hover {
            background-color: rgb(0 0 0 / 65%);
        }

    td {
        background-color: transparent !important;
    }

    thead {
        display: none;
        width: 100%;
    }

    .rz-text-display-h5 {
        float: inline-end;
    }

    .rz-body {
        overflow: hidden !important;
    }
</style>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public int Id { get; set; }

    List<TotalMatch> matches = [];
    bool ready = false;
    double dataGridHeight = 77;

    void RowRender(RowRenderEventArgs<TotalMatch> args)
    {
        var x = args.Data;

        args.Attributes.Add("class", "row-ktv");
        args.Attributes.Add("Style", "display: grid;margin-bottom: 5px;background-image: url(/images/mapsbackgrs/" + x.MapName + ".jpg);height: 130px;background-size: 100% auto; background-position: center; background-blend-mode: multiply");
    }

    public void Dispose()
    {
        matches = null;
    }

    protected override async Task OnInitializedAsync()
    {
        Task.Run(async () =>
        {
            matches = await http.GetFromJsonAsync<List<TotalMatch>>("/api/players/getmymatches?id=" + Id);

            ready = true;

            await InvokeAsync(StateHasChanged);
        });
    }
}

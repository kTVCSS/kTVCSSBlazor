@page "/editmixesmaps"
@using kTVCSS.Models.Db.Models.Common
@using kTVCSSBlazor.Client.Authorization
@using kTVCSSBlazor.Client.Components
@using kTVCSSBlazor.Db.Models.Players
@inject IJSRuntime JS
@inject StateProvider AuthProvider
@inject NavigationManager NavigationManager
@inject HttpClient http

<PageTitle>kTVCSS @@ Редактор списка миксовых карт</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            @if (AuthProvider.CurrentUser.Role >= kTVCSS.Models.Db.Models.Roles.RoleType.SuperAdmin)
            {
                <RadzenAlert AlertStyle="AlertStyle.Info" Text="Для редактирования имеющейся карты нужно удалить ее, а потом добавить заного с новым именем" />

                <RadzenDataGrid @ref="itemsGrid" AllowAlternatingRows="true" AllowVirtualization EditMode="@editMode"
                                Data="@items" TItem="Map" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow" Sort="@Reset" Page="@Reset" Filter="@Reset" ColumnWidth="200px">
                    <HeaderTemplate>
                        <RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle" Text="Добавить" Click="@InsertRow" Disabled="@(editMode == DataGridEditMode.Single && itemsToInsert.Count() > 0)" />
                    </HeaderTemplate>
                    <Columns>
                        <RadzenDataGridColumn Property="Map.MAP" Title="Карта">
                            <EditTemplate Context="item">
                                <RadzenTextBox @bind-Value="item.MAP" Style="width:100%; display: block;" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                        <RadzenDataGridColumn Context="item" Filterable="false" Sortable="false" TextAlign="TextAlign.Right" Frozen="true" FrozenPosition="FrozenColumnPosition.Right">
                            <Template Context="item">
                                <RadzenButton Icon="add_circle" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Shade="Shade.Lighter" Click="@(() => InsertAfterRow(item))" title="Add new row after this row" Disabled="@(editMode == DataGridEditMode.Single && itemsToInsert.Count() > 0)" />
                                @* <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@(args => EditRow(item))" @onclick:stopPropagation="true" /> *@
                                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Size="ButtonSize.Medium" Shade="Shade.Lighter" class="rz-my-1 rz-ms-1" Click="@(args => DeleteRow(item))" @onclick:stopPropagation="true" />
                            </Template>
                            <EditTemplate Context="item">
                                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Success" Variant="Variant.Flat" Size="ButtonSize.Medium" Click="@((args) => SaveRow(item))" aria-label="Save" />
                                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" class="rz-my-1 rz-ms-1" Click="@((args) => CancelEdit(item))" aria-label="Cancel" />
                                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Variant="Variant.Flat" Size="ButtonSize.Medium" Shade="Shade.Lighter" class="rz-my-1 rz-ms-1" Click="@(args => DeleteRow(item))" aria-label="Delete" />
                            </EditTemplate>
                        </RadzenDataGridColumn>
                    </Columns>
                </RadzenDataGrid>
            }
            else
            {
                <RadzenAlert AlertStyle="AlertStyle.Danger">У Вас нет прав для просмотра этой страницы!</RadzenAlert>
            }
        </Authorized>
        <NotAuthorized>
            <RadzenAlert AlertStyle="AlertStyle.Danger">Вы должны быть авторизованы для просмотра этой страницы!</RadzenAlert>
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

@page "/moviemaker"
@using System.Text
@using System.Text.RegularExpressions
@using System.Globalization
@using kTVCSSBlazor.Client.Authorization
@using kTVCSSBlazor.Client.Components
@using kTVCSSBlazor.Client.Services
@using kTVCSSBlazor.Db.Models.Highlights
@using kTVCSSBlazor.Db.Models.Matches
@using kTVCSSBlazor.Db.Models.Players
@inject IJSRuntime JS
@inject NavigationManager NavigationManager
@inject StateProvider AuthProvider
@inject IConfiguration config
@inject DialogService DialogService
@inject NotificationService NotifyService
@inject TooltipService tooltipService
@inject HttpClient http
@inject IMobileDetectionService mds

<PageTitle>kTVCSS @@ MovieMaker-центр</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            @if (ready)
            {
                if (AuthProvider.CurrentUser.IsVip || AuthProvider.CurrentUser.IsPremiumVip || AuthProvider.CurrentUser.Role >= kTVCSS.Models.Db.Models.Roles.RoleType.MovieMaker)
                {
                    <RadzenStack>
                        <RadzenText TextAlign=TextAlign.Center TextStyle="TextStyle.DisplayH4">Мувимейкинг-центр</RadzenText>
                        <RadzenCard>
                            <RadzenStack AlignItems=AlignItems.Center JustifyContent=JustifyContent.Center Orientation="@(isMobile? Orientation.Vertical: Orientation.Horizontal)">
                                <RadzenLabel Text="От" />
                                <RadzenDatePicker @bind-Value=@dtFrom ShowTime="true" ShowSeconds="true" HoursStep="1" MinutesStep="5" SecondsStep="10" DateFormat="dd.MM.yyyy HH:mm" />
                                <RadzenLabel Text="До" />
                                <RadzenDatePicker @bind-Value=@dtTo ShowTime="true" ShowSeconds="true" HoursStep="1" MinutesStep="5" SecondsStep="10" DateFormat="dd.MM.yyyy HH:mm" />
                                <RadzenLabel Text="Макс. сек." />
                                <RadzenNumeric @bind-Value=minsecs />
                                <RadzenButton Text="Анализ" Click="Analyse" />
                                <RadzenLabel Text="Квадро" />
                                <RadzenSwitch @bind-Value=justQuadros />
                                <RadzenLabel Text="Эйсы" />
                                <RadzenSwitch @bind-Value=justAces />
                            </RadzenStack>
                        </RadzenCard>
                        <RadzenStack>
                            @foreach (var group in results)
                            {
                                <RadzenCard Variant="Variant.Outlined">
                                    <RadzenStack>
                                        <RadzenText TextAlign="TextAlign.Center" TextStyle="TextStyle.DisplayH5"><RadzenLink Path="@string.Concat("/match/", group.Key)">Хайлайты с матча #@group.Key</RadzenLink></RadzenText>
                                        <RadzenDataGrid Responsive AllowAlternatingRows=false EmptyText="Хайлайты не найдены" AllowSorting AllowVirtualization Density="Density.Default" Data="@group.ToList()">
                                            <Columns>
                                                <RadzenDataGridColumn Context="ctx" Title="Ник на демо" Property="Name" />
                                                <RadzenDataGridColumn Context="ctx" Title="Момент" Property="Type" />
                                                <RadzenDataGridColumn Context="ctx" Title="Время (тики)" Property="Ticks" />
                                                <RadzenDataGridColumn Context="ctx" Title="Длительность (сек)" Property="Length" />
                                                <RadzenDataGridColumn Context="ctx">
                                                    <Template>
                                                        <RadzenButton Icon="download" Click="@(() => { JS.InvokeVoidAsync("openDemoUrl", ctx.DemoName); })" />
                                                    </Template>
                                                </RadzenDataGridColumn>
                                            </Columns>
                                        </RadzenDataGrid>
                                    </RadzenStack>
                                </RadzenCard>
                            }
                        </RadzenStack>
                    </RadzenStack>
                }
                else
                {
                    <NoAccess />
                }
            }
            else
            {
                <RadzenRow JustifyContent="JustifyContent.Center">
                    <RadzenStack AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
                        <Loader Size="ProgressBarCircularSize.Medium" Text="Идет загрузка данных. Это может занять время." />
                    </RadzenStack>
                </RadzenRow>
            }
        </Authorized>
        <NotAuthorized>
            <NoAccess />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

<script>
    function openDemoUrl(name) {
        window.open('/demos/' + name + '.dem.zip', '_blank');
    }
</script>
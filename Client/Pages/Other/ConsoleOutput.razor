@page "/mixconsole"
@using kTVCSS.Models.Models
@using kTVCSSBlazor.Client.Authorization
@using kTVCSSBlazor.Client.Services
@implements IAsyncDisposable
@inject NavigationManager Nav
@inject IJSRuntime JS
@inject HttpClient http
@inject StateProvider AuthProvider
@inject WindowSizeService WindowSize
@inject IMobileDetectionService mds

<PageTitle>kTVCSS @@ Управление миксом #1</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            @if (access)
            {
                <RadzenStack>
                    <div @ref="window" style="height: @(windowHeight)px; overflow:auto">
                        <pre>@output</pre>
                    </div>
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <RadzenTextBox Style="width: 100%;margin-right: 2%;" @onkeypress="HandleKeyPress" @oninput=@(args => { cmd = args.Value.ToString(); }) @bind-Value=cmd Placeholder="RCON команда" />
                        <RadzenButton Style="margin-right: 1%;" Icon="send" Disabled=@(string.IsNullOrWhiteSpace(cmd)) Click="SendMessage" />
                    </RadzenStack>
                    <RadzenStack Orientation="Orientation.Horizontal">
                        <RadzenButton Disabled=disabled Text="Старт" Click="@(() => { Execute(ActionType.Start); })" />
                        <RadzenButton Disabled=disabled Text="Стоп" Click="@(() => { Execute(ActionType.Stop); })" />
                        <RadzenButton Disabled=disabled Text="Рестарт" Click="@(() => { Execute(ActionType.Restart); })" />
                    </RadzenStack>
                </RadzenStack>
            }
            else
            {
                <kTVCSSBlazor.Client.Components.NoAccess />
            }
        </Authorized>
        <NotAuthorized>
            <kTVCSSBlazor.Client.Components.NoAccess />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>
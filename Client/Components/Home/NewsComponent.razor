@using kTVCSSBlazor.Db.Models.Arcticles
@inject NavigationManager NavigationManager
@inject HttpClient http

@if (ready)
{
    @if (News.Any())
    {
        <RadzenRow JustifyContent="JustifyContent.Center">
            <RadzenColumn SizeMD="9" SizeSM="12">
                <RadzenPanelMenu>
                    @foreach (var article in News.OrderByDescending(x => x.Id))
                    {
                        <RadzenPanelMenuItem Click="@(() => { NavigationManager.NavigateTo("/article/" + article.Id); })" Text="@string.Concat(article.Title, ": ", article.ShortText)" />
                    }
                </RadzenPanelMenu>
            </RadzenColumn>
        </RadzenRow>
    }
    else
    {
        <RadzenAlert AlertStyle="AlertStyle.Warning" Text="Новостей пока нет" />
    }
}
else
{
    <RadzenRow JustifyContent="JustifyContent.Center">
        <RadzenStack AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center">
            <Loader Size="ProgressBarCircularSize.Medium" Text="Идет загрузка новостей проекта" />
        </RadzenStack>
    </RadzenRow>
}

@code {
    private List<Article> News = new();
    private bool ready = false;

    protected override async Task OnInitializedAsync()
    {
        Task.Run(async () =>
        {
            News = await http.GetFromJsonAsync<List<Article>>("/api/articles");

            ready = true;

            await InvokeAsync(StateHasChanged);
        });
    }
}

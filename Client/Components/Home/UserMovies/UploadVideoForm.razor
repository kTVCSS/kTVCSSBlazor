@page "/uploadvideo"
@using kTVCSSBlazor.Client.Authorization
@using kTVCSSBlazor.Client.Components
@using kTVCSSBlazor.Db
@using kTVCSSBlazor.Db.Models.Teams
@inject StateProvider AuthProvider
@inject NotificationService NotificationService
@inject NavigationManager NavigationManager
@inject HttpClient http
@inject IJSRuntime JSRuntime
@implements IDisposable

<PageTitle>kTVCSS @@ Добавление хайлайта</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <RadzenStack>
                <RadzenStack>
                    <RadzenText TextStyle=TextStyle.DisplayH4 Text="Добавление хайлайта" />
                </RadzenStack>

                <RadzenStack>
                    <RadzenStack Gap="4px">
                        <RadzenAlert AllowClose=false Size=AlertSize.Small AlertStyle="AlertStyle.Info" Text="Файл должен быть не менее 512 МБайт" />
                        <RadzenAlert AllowClose=false Size=AlertSize.Small AlertStyle="AlertStyle.Info" Text="Будет неплохо, если Вы воспользуетесь такими программами, как Handbrake, чтобы сжать исходное видео" />
                        <RadzenAlert AllowClose=false Size=AlertSize.Small AlertStyle="AlertStyle.Info" Text="Наилучший битрейт для видео - 8192 КБит/с (8 МБит/с)" />
                    </RadzenStack>

                    <RadzenFormField Text="Заголовок" Variant="Variant.Filled">
                        <RadzenTextBox @bind-Value="_video.Title" />
                    </RadzenFormField>
                    <RadzenFormField Text="Описание" Variant="Variant.Filled">
                        <RadzenTextArea Rows="8" @bind-Value="_video.Description" />
                    </RadzenFormField>
                    <RadzenUpload Disabled=isUploading Progress=@OnProgress @ref=_uploader ChooseText="Загрузить видео" Multiple="false" Auto Change=@OnVideoChange
                                  InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})">
                                  <RadzenUploadHeader Name="Content-Type" Value="multipart/form-data" />
                    </RadzenUpload>
                    <RadzenProgressBar Value=@progress class="rz-mt-2" Visible=isUploading />
                    <RadzenUpload ChooseText="Загрузить обложку для видео" Multiple="false" Auto Change=@OnPreviewChange
                                  InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "select file" }})" />

                    <RadzenButton Icon="publish" Text="Опубликовать" Click="Submit" />
                </RadzenStack>
            </RadzenStack>
        </Authorized>
        <NotAuthorized>
            <NoAccess />
        </NotAuthorized>
    </AuthorizeView>
</CascadingAuthenticationState>

<script>
    async function uploadWithProgress(url, file, dotNetHelper) {
        return new Promise((resolve, reject) => {
            const xhr = new XMLHttpRequest();
            const formData = new FormData();
            formData.append('file', file);

            xhr.upload.onprogress = (event) => {
                if (event.lengthComputable) {
                    const percentComplete = Math.round((event.loaded / event.total) * 100);
                    dotNetHelper.invokeMethodAsync('UpdateProgress', percentComplete);
                }
            };

            xhr.onload = () => {
                if (xhr.status >= 200 && xhr.status < 300) {
                    resolve(xhr.response);
                } else {
                    reject(new Error(xhr.statusText));
                }
            };

            xhr.onerror = () => reject(new Error('Ошибка загрузки'));
            xhr.open('POST', url, true);
            xhr.send(formData);
        });
    }
</script>
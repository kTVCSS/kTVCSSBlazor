@using kTVCSS.Models.Db.Models.Common
@using kTVCSSBlazor.Client.Authorization
@using kTVCSSBlazor.Client.Services
@inject HttpClient http
@inject NavigationManager nm
@inject StateProvider AuthProvider
@implements IDisposable
@inject NotificationService NotifyService
@inject IMobileDetectionService mds

@if (ready)
{
    @if (isMobile)
    {
        <RadzenButton Size=ButtonSize.Small ButtonStyle=@(unreadCount == 0 ? ButtonStyle.Primary : ButtonStyle.Warning)
            Style="width: 32px; height: 32px; align-self: center;" Icon="notifications" Click="@ToggleDrawer" />
    }
    else
    {
        <RadzenButton Size=ButtonSize.Small ButtonStyle=@(unreadCount == 0 ? ButtonStyle.Primary : ButtonStyle.Warning)
            Text="Уведомления" Style="height: 32px; align-self: center;" Icon="notifications" Click="@ToggleDrawer" />
    }
}

<div class="drawer-overlay" style="@(drawerVisible ? "display:block" : "display:none")" @onclick="ToggleDrawer"></div>

<div class="notification-drawer @(drawerVisible ? "open" : "")">
    <div class="notification-header">
        <RadzenStack AlignItems=AlignItems.Center Orientation="Orientation.Horizontal"
            JustifyContent="JustifyContent.SpaceBetween">
            <RadzenButton IconColor="white" Variant=Variant.Text Icon="arrow_back" Click="ToggleDrawer" />
            Уведомления (@unreadCount)
            <RadzenButton Style="color: white" Variant="Variant.Text" Text="Скрыть все" Icon="close" Click="CloseAll" />
        </RadzenStack>
    </div>

    @if (notifications == null)
    {
        <div style="padding:16px;">Загрузка...</div>
    }
    else if (!notifications.Any())
    {
        <div style="padding:16px;">Новых уведомлений нет.</div>
    }
    else
    {
        @foreach (var n in notifications)
        {
            <div class="notification-item @(n.IsRead ? "" : "unread")" @onclick="@(() => OnNotificationClick(n))">
                <div><strong>@n.Title</strong></div>
                <div style="font-size:0.9em; color:#8b8b8b;overflow-wrap: anywhere;">@n.Message</div>
                <div style="font-size:0.8em; color:#999; margin-top:4px;">
                    @n.CreatedAt.ToLocalFromMoscow().ToString("g")
                </div>
            </div>
        }
    }
</div>

<style>
    .drawer-overlay {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.4);
        z-index: 1000;
    }

    .notification-drawer {
        position: fixed;
        top: 0;
        overflow-y: auto;
        right: 0;
        width: 100%;
        max-width: 500px;
        height: 100%;
        background: #131417;
        box-shadow: -2px 0 6px rgba(0, 0, 0, 0.2);
        z-index: 1001;
        display: flex;
        flex-direction: column;
        transform: translateX(100%);
        opacity: 0;
        transition: transform 0.35s cubic-bezier(.65, .05, .36, 1), opacity 0.32s cubic-bezier(.65, .05, .36, 1);
    }

    .notification-drawer.open {
        transform: translateX(0);
        opacity: 1;
    }

    .notification-header {
        padding: 16px;
        border-bottom: 1px solid #eaeaea;
        font-weight: bold;
    }

    .notification-item {
        padding: 12px 16px;
        border-bottom: 1px solid #f1f1f1;
        cursor: pointer;
    }

    .notification-item.unread {
        background: #121518
    }

    .notification-item:hover {
        background: #171818;
    }
</style>